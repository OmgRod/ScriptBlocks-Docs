{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to ScriptBlocks!","text":"<p>ScriptBlocks is a next-generation IDE designed for both beginner and professional developers.</p>"},{"location":"#documentation-guide","title":"Documentation Guide","text":"<p>This documentation is easy to navigate! At the top of the screen, you'll find a hamburger icon. Click it to access a menu with various guides and tutorials.</p>"},{"location":"vol1/installing/","title":"Installing","text":""},{"location":"vol2/creating-sprites/","title":"Sprites","text":"<p>Sprites are a fundamental concept when developing using ScriptBlocks, so in this tutorial, we are going to show you how to make sprites.</p>"},{"location":"vol2/creating-sprites/#loading-the-sprite","title":"Loading the Sprite","text":"<p>First, we need to initialise our project. So, in <code>main.py</code>, we type the following:</p> <pre><code>import scriptblocks\n</code></pre> <p>After this, it's time to load our <code>Sprite</code>! So, we type the following:</p> <pre><code>testSprite = scriptblocks.Sprite(\"test\")\n</code></pre> <p>This loads a <code>Sprite</code> from the sidebar with the name <code>test</code>. </p>"},{"location":"vol2/creating-sprites/#manipulating-the-sprite","title":"Manipulating the Sprite","text":"<p>Now that we have created and loaded our <code>Sprite</code>, it's time to manipulate it! In ScriptBlocks, there are many ways to manipulate sprites, including the following ways:</p>"},{"location":"vol2/creating-sprites/#changing-the-position","title":"Changing the position","text":"<p>There are 3 ways we can change the position of a <code>Sprite</code>. The first way is to set the X position by itself:</p> <pre><code>testSprite.setPositionX(50) # Change 50 to any float value\n</code></pre> <p>The second way is to set the Y position by itself:</p> <pre><code>testSprite.setPositionY(35) # Change 35 to any float value\n</code></pre> <p>And the 3rd and final way to move a sprite is by setting both values at once:</p> <pre><code>testSprite.setPosition(50, 35) # Set 50 and 35 to any float value\n</code></pre>"},{"location":"vol2/creating-sprites/#changing-the-visibility","title":"Changing the visibility","text":"<p>When setting the visibility of a sprite, there are 4 functions to do that. The first one shows the sprite no matter what:</p> <pre><code>testSprite.show()\n</code></pre> <p>The second one hides the sprite no matter what:</p> <pre><code>testSprite.hide()\n</code></pre> <p>The third one toggles the visibility of the sprite:</p> <pre><code>testSprite.toggleVisibility()\n</code></pre> <p>And lastly the fourth one changes the visibility based on the boolean value sent:</p> <pre><code>testSprite.setVisible(true) # Use true to show and false to hide\n</code></pre>"},{"location":"vol2/creating-sprites/#changing-the-scale","title":"Changing the scale","text":"<p>The final main way to manipulate a sprite is by changing its scale. There are 6 ways to do this. The first way is to scale it only in the X axis, with 1 being 100% of the default size:</p> <pre><code>testSprite.setScaleX(1.25)\n</code></pre> <p>The second way is to only scale it in the Y axis, with 1 being 10% of the default size:</p> <pre><code>testSprite.setScaleY(0.5)\n</code></pre> <p>The third way is to scale it in both the X and Y axis, with 1 being 100% of the default size:</p> <pre><code>testSprite.setScale(1.25, 0.5)\n</code></pre> <p>The fourth way is to scale it in only the X axis, but this time scaling it based on pixels:</p> <pre><code>testSprite.setScaleXByPixels(250)\n</code></pre> <p>The fifth way is to scale it in only the Y axis, but this time scaling it based on pixels:</p> <pre><code>testSprite.setScaleYByPixels(75)\n</code></pre> <p>The sixth way is to scale it in both the X and Y axis, but this time scaling it based on pixels:</p> <pre><code>testSprite.setScaleByPixels(250, 75)\n</code></pre>"}]}